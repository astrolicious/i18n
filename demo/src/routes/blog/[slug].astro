---
import { getCollection } from "astro:content";
import {
	getDefaultLocalePlaceholder,
	getLocalePlaceholder,
	setDynamicParams,
	t,
} from "i18n:astro";
import sitemap from "i18n:astro/sitemap";
import type { GetStaticPaths } from "astro";
import Layout from "~/layouts/Layout.astro";

export const getStaticPaths = (async () => {
	const locale = getLocalePlaceholder();
	const defaultLocale = getDefaultLocalePlaceholder();

	const posts = await getCollection(
		"posts",
		({ slug }) => slug.split("/")[0] === locale,
	);

	return await Promise.all(
		posts.map(async (post) => {
			const equivalentPosts = await getCollection("posts", (p) => {
				if (locale === defaultLocale) {
					return (
						p.slug === post.slug ||
						p.data.defaultLocaleVersion?.slug === post.slug
					);
				}
				return (
					p.slug === post.data.defaultLocaleVersion?.slug ||
					p.data.defaultLocaleVersion?.slug ===
						post.data.defaultLocaleVersion?.slug
				);
			});

			const dynamicParams = equivalentPosts.map((post) => {
				const [locale, slug] = post.slug.split("/");

				return {
					locale,
					params: {
						slug,
					},
				};
			});

			sitemap({
				dynamicParams,
			});

			return {
				params: {
					slug: post.slug.split("/")[1],
				},
				props: {
					post,
					dynamicParams,
				},
			};
		}),
	);
}) satisfies GetStaticPaths;

const { post, dynamicParams } = Astro.props;

setDynamicParams(dynamicParams);

const title = `${t("blog")} - ${post.data.title}`;
---

<Layout {title}>
  <h1>{title}</h1>
</Layout>
